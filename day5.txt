Time Complexcity:
  Efficient time to run an algorithm is time complexcity. It is denoted by "Big O" notaion. Big O follows worst case to get the given value.

    => List Time Complexcity :
    1. append() -> O(1) directly adds at end.
    2. remove() -> O(n) searchs the given value from 0 to n index takes n sec
    3. pop()    -> O(1) it doesn't searchs, directly removes last element or specified index element 

    => Set Time Complexcity :
    1. add() -> O(1)
    2. remove() -> O(1) 
      In set hash table also called as hash maps or dictionaries. Which makes id for every values to move directly to the value.

Leet code:-
https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/1186425026?source=submission-ac
